# Generated by Django 4.2.7 on 2025-07-28 21:48

import apps.images.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('original_image', models.ImageField(upload_to=apps.images.models.upload_to_images)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('format', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='uploaded', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('is_content_safe', models.BooleanField(default=False)),
                ('moderation_result', models.JSONField(blank=True, default=dict)),
                ('moderation_checked_at', models.DateTimeField(blank=True, null=True)),
                ('s3_key', models.CharField(blank=True, max_length=500)),
                ('s3_url', models.URLField(blank=True, max_length=1000)),
                ('s3_bucket', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'db_table': 'images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Image Tag',
                'verbose_name_plural': 'Image Tags',
                'db_table': 'image_tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcessedImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('style_name', models.CharField(max_length=100)),
                ('style_prompt', models.TextField()),
                ('processed_image', models.ImageField(upload_to=apps.images.models.upload_to_processed)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('openai_request_id', models.CharField(blank=True, max_length=255)),
                ('openai_model_used', models.CharField(default='gpt-image-1', max_length=100)),
                ('processing_parameters', models.JSONField(blank=True, default=dict)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('user_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('original_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_versions', to='images.image')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Processed Image',
                'verbose_name_plural': 'Processed Images',
                'db_table': 'processed_images',
                'ordering': ['-created_at'],
                'unique_together': {('original_image', 'style_name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ImageTagAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_assignments', to='images.image')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_assignments', to='images.imagetag')),
            ],
            options={
                'verbose_name': 'Image Tag Assignment',
                'verbose_name_plural': 'Image Tag Assignments',
                'db_table': 'image_tag_assignments',
                'unique_together': {('image', 'tag')},
            },
        ),
    ]
