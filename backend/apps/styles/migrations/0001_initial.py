# Generated by Django 4.2.7 on 2025-07-28 21:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('prompt_template', models.TextField(help_text='Template for OpenAI prompt. Use {original_prompt} for user input.')),
                ('preview_image', models.URLField(blank=True, max_length=500)),
                ('thumbnail', models.URLField(blank=True, max_length=500)),
                ('default_quality', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('default_background', models.CharField(choices=[('auto', 'Auto'), ('transparent', 'Transparent'), ('opaque', 'Opaque')], default='auto', max_length=15)),
                ('default_output_format', models.CharField(choices=[('png', 'PNG'), ('jpeg', 'JPEG'), ('webp', 'WebP')], default='png', max_length=10)),
                ('default_size', models.CharField(choices=[('auto', 'Auto'), ('1024x1024', 'Square (1024x1024)'), ('1536x1024', 'Landscape (1536x1024)'), ('1024x1536', 'Portrait (1024x1536)')], default='auto', max_length=15)),
                ('default_compression', models.PositiveIntegerField(default=85, help_text='0-100% compression level')),
                ('supports_transparency', models.BooleanField(default=True)),
                ('supports_streaming', models.BooleanField(default=True)),
                ('max_prompt_length', models.PositiveIntegerField(default=1000)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('popularity_score', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Style',
                'verbose_name_plural': 'Styles',
                'db_table': 'styles',
                'ordering': ['category__sort_order', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StyleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Style Category',
                'verbose_name_plural': 'Style Categories',
                'db_table': 'style_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StyleRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='styles.style')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='style_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Style Rating',
                'verbose_name_plural': 'Style Ratings',
                'db_table': 'style_ratings',
            },
        ),
        migrations.CreateModel(
            name='StyleExample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('original_image_url', models.URLField(max_length=500)),
                ('styled_image_url', models.URLField(max_length=500)),
                ('prompt_used', models.TextField()),
                ('parameters_used', models.JSONField(blank=True, default=dict)),
                ('is_featured', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='styles.style')),
            ],
            options={
                'verbose_name': 'Style Example',
                'verbose_name_plural': 'Style Examples',
                'db_table': 'style_examples',
                'ordering': ['sort_order', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='style',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='styles', to='styles.stylecategory'),
        ),
        migrations.AddField(
            model_name='style',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserStylePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorite', models.BooleanField(default=False)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('preferred_quality', models.CharField(blank=True, max_length=10)),
                ('preferred_background', models.CharField(blank=True, max_length=15)),
                ('preferred_output_format', models.CharField(blank=True, max_length=10)),
                ('preferred_size', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='styles.style')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='style_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Style Preference',
                'verbose_name_plural': 'User Style Preferences',
                'db_table': 'user_style_preferences',
                'unique_together': {('user', 'style')},
            },
        ),
        migrations.AddConstraint(
            model_name='stylerating',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='rating_range_check'),
        ),
        migrations.AlterUniqueTogether(
            name='stylerating',
            unique_together={('user', 'style')},
        ),
        migrations.AlterUniqueTogether(
            name='style',
            unique_together={('category', 'name')},
        ),
    ]
